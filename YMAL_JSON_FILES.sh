#!/bin/bash

# Introduction
echo "This script provides detailed information about YAML and JSON files, including their structure, usage, and differences."

# YAML Overview
echo -e "\n1. YAML (YAML Ain't Markup Language):"
echo "YAML is a human-readable data serialization standard that can be used in conjunction with all programming languages."
echo "It is often used for configuration files and data exchange between languages with different data structures."

# YAML Structure
echo -e "\nYAML Structure:"
echo "  - Key-Value Pairs: YAML files use key-value pairs for data representation."
echo "    Example:"
echo "      name: John Doe"
echo "      age: 30"
echo "  - Lists: Lists are represented using dashes."
echo "    Example:"
echo "      hobbies:"
echo "        - Reading"
echo "        - Hiking"
echo "  - Nested Data: Data can be nested using indentation."
echo "    Example:"
echo "      address:"
echo "        street: 123 Elm St"
echo "        city: Springfield"
echo "  - Comments: Comments in YAML start with a hash (#)."
echo "    Example:"
echo "      # This is a comment"
echo "      name: Jane Doe"

# JSON Overview
echo -e "\n2. JSON (JavaScript Object Notation):"
echo "JSON is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate."
echo "It is commonly used for APIs and configuration files."

# JSON Structure
echo -e "\nJSON Structure:"
echo "  - Key-Value Pairs: JSON data is represented as key-value pairs."
echo "    Example:"
echo "      {"
echo "        \"name\": \"John Doe\","
echo "        \"age\": 30"
echo "      }"
echo "  - Lists: Lists are represented as arrays."
echo "    Example:"
echo "      {"
echo "        \"hobbies\": ["
echo "          \"Reading\","
echo "          \"Hiking\""
echo "        ]"
echo "      }"
echo "  - Nested Data: Data can be nested using curly braces."
echo "    Example:"
echo "      {"
echo "        \"address\": {"
echo "          \"street\": \"123 Elm St\","
echo "          \"city\": \"Springfield\""
echo "        }"
echo "      }"
echo "  - Comments: JSON does not support comments."

# Differences Between YAML and JSON
echo -e "\n3. Differences Between YAML and JSON:"
echo "  - Syntax:"
echo "    - YAML uses indentation to represent structure, while JSON uses curly braces {} and square brackets []."
echo "    - YAML is more human-readable and can be more concise, while JSON is often easier for machines to parse."
echo "  - Comments:"
echo "    - YAML supports comments with the hash (#) symbol."
echo "    - JSON does not support comments."
echo "  - Data Types:"
echo "    - YAML supports more complex data types, including multiple types of keys, while JSON is limited to strings, numbers, objects, arrays, true, false, and null."
echo "  - Compatibility:"
echo "    - YAML is used primarily for configuration files and is more flexible in terms of structure."
echo "    - JSON is often used for data interchange between servers and web applications due to its simplicity and compatibility with JavaScript."

# Example YAML and JSON Files
echo -e "\n4. Example YAML and JSON Files:"

echo -e "\nYAML Example:"
echo "---"
echo "name: Alice"
echo "age: 25"
echo "address:"
echo "  street: 456 Maple Ave"
echo "  city: Metropolis"
echo "hobbies:"
echo "  - Painting"
echo "  - Cycling"

echo -e "\nJSON Example:"
echo "{"
echo "  \"name\": \"Alice\","
echo "  \"age\": 25,"
echo "  \"address\": {"
echo "    \"street\": \"456 Maple Ave\","
echo "    \"city\": \"Metropolis\""
echo "  },"
echo "  \"hobbies\": ["
echo "    \"Painting\","
echo "    \"Cycling\""
echo "  ]"
echo "}"

# End of script
echo -e "\nEnd of YAML and JSON information overview."

